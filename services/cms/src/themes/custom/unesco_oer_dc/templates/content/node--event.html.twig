{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 */
#}

<article{{attributes.addClass([
    'c-article',
    content.field_image[0] ? 'c-article--with-media' : 'c-article--without-media',
]).setAttribute('data-options', {
    'articleNavTitle': 'On this page'|t,
}|json_encode)}}>
    {% if content.field_registration_link[0] %}
        <div class="o-region c-banner c-banner--small">
            <div class="o-container c-banner__container">
                <div class="o-row c-banner__row">
                    {% set title = content.field_registration_link[0]['#title'] %}
                    {% if not (title starts with 'http') %}
                        <div class="c-banner__body o-col">
                            <p>{{ title }}</p>
                        </div>
                    {% endif %}
                    {% set url = content.field_registration_link[0]['#url'] %}
                    <div class="c-banner__links o-col">
                        <a class="c-banner__link c-button c-button--filled" href="{{ url.external ? url.uri : url }}" target="{{ url.external ? '_blank' : '_self' }}">
                            <span class="c-button__label">{{ 'Register'|t }}</span>
                            {{ url.external ? svg_icon('open-in-new', 'c-button__trailing-icon') : '' }}
                        </a>
                    </div>
                </div>
            </div>
        </div>
    {% endif %}
    <div class="c-article__header">
        <div class="o-container">
            <div class="c-article__content">
                <div class="c-article__toolbar">
                    <span class="c-article__category">{{ content.field_event_type }}</span>
                    <span class="c-article__share">
                        {{ content.addtoany }}
                    </span>
                </div>
                {{ title_prefix }}
                <h1{{title_attributes.addClass('c-article__title')}}>
                    {{ label }}
                </h1>
                {{ title_suffix }}
                <dl class="c-article__meta">
                    <div class="c-article__meta-item">
                        {{ author_name }}
                    </div>
                    <div class="c-article__meta-item">
                        {{ content.field_start_date }}
                        {% if content.field_end_date[0] %}
                            {{ content.field_end_date }}
                        {% endif %}
                    </div>
                    <div class="c-article__meta-item">
                        {% if content.field_venue_link[0] %}
                            {% set url = content.field_venue_link[0]['#url'] %}
                            <a href="{{ url.external ? url.uri : url }}" target="{{ url.external ? '_blank' : '_self' }}">
                                {{ content.field_location }}
                                {{ url.external ? svg_icon('open-in-new') : '' }}
                            </a>
                        {% else %}
                            {{ content.field_location }}
                        {% endif %}
                    </div>
                </dl>
            </div>
        </div>
    </div>
    <div class="c-article__body">
        <div class="o-container">
            <div{{content_attributes.addClass('c-article__content')}}>
                <div class="c-article__main">
                    {% if content.field_image[0] %}
                        <div class="c-article__media">
                            {{ content.field_image }}
                        </div>
                    {% endif %}
                    <div class="c-article__description">
                        {{ content.field_description }}
                    </div>
                    {% if content.field_url[0] %}
                        <div class="c-article__buttons">
                            {{ content.field_url }}
                        </div>
                    {% endif %}
                    {% if content.field_links[0] %}
                        <hr class="c-article__divider" />
                        <div class="c-article__related">
                            {{ content.field_links }}
                        </div>
                    {% endif %}
                </div>
                <aside class="c-article__sidebar"></aside>
            </div>
        </div>
    </div>
    {# <script>console.log('NODE', {{ _context | json_encode | raw}});</script> #}
</article>
{# {{ dump() }} #}
