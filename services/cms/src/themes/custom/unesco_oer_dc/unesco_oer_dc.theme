<?php

/**
 * @file
 * Functions to support theming in the UNESCO OER DC theme.
 */

use Drupal\Core\Template\Attribute;

function get_node_name($key) {
    $node_map = array(
        '223' => 'home'
    );
    if (array_key_exists($key, $node_map)) {
        return $node_map[$key];
    }

    return null;
}

function get_block_name($key) {
    $block_map = array(
        'cef61108-2e3e-4661-bc31-8b08861eaaca' => 'about',
        '96334729-bbe9-4da2-ad63-adc94c0fd743' => 'who-we-are',
        'b6ee0fe2-3b9a-42d8-8ab2-661aa778aa0b' => 'dc-areas-of-action',
        '351dd98b-3fde-4ef7-9d3a-a5d5b6b7f875' => 'latest-news',
        '0fa60256-5732-40bc-b932-64541cc70be2' => 'upcoming-events',
    );
    if (array_key_exists($key, $block_map)) {
        return $block_map[$key];
    }

    return null;
}

function &get_classes(&$variables) {
    if (empty($variables['attributes']['class'])) {
        $variables['attributes']['class'] = array();
    }

    return $variables['attributes']['class'];
}

function clean_suggetion($suggestion) {
    return str_replace('-', '_', $suggestion);
}

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function unesco_oer_dc_preprocess_html(&$variables) {
    // Add class
    // $variables['attributes']['class'][] = 'page';

    // Read SVG icons
    $theme_path = \Drupal::service('extension.list.theme')->getPath('unesco_oer_dc');
    $svg = file_get_contents($theme_path . '/images/icons.svg');
    $variables['svg_icons'] = $svg;
}

/**
 * Implements hook_preprocess_HOOK() for page.html.twig.
 */
function unesco_oer_dc_preprocess_page(&$variables) {
    // $classes = &get_classes($variables);

    // // Add class
    // $classes[] = 'page';

    // // Add SVG icons
    // $theme_path = \Drupal::service('extension.list.theme')->getPath('unesco_oer_dc');
    // $svg = file_get_contents($theme_path . '/images/icons.svg');
    // $variables['svg_icons'] = $svg;

    // // Add search form
    // $search_form = \Drupal::formBuilder()->getForm('Drupal\search\Form\SearchForm');
    // $variables['search_form'] = $search_form;

    // // Add language switcher
    // $language_switcher = \Drupal::formBuilder()->getForm('Drupal\language\Form\LanguageBlockForm');
    // $variables['language_switcher'] = $language_switcher;

    // // Add navigation
    // $navigation = \Drupal::service('renderer')->renderBlock(\Drupal::entityTypeManager()->getStorage('block')->load('mainnavigation'), 'main');
    // $variables['navigation'] = $navigation;

    // // Add footer
    // $footer = \Drupal::service('renderer')->renderBlock(\Drupal::entityTypeManager()->getStorage('block')->load('footer'), 'main');
    // $variables['footer'] = $footer;
    if (empty($variables['page']['footer_bottom'])) {
        $variables['page']['footer_bottom'] = array(
            '#region' => 'footer_bottom',
            '#sorted' => true,
            '#theme_wrappers' => ['region'],
            '#site_name' => \Drupal::config('system.site')->get('name')
        );
    }
}

/**
 * Implements hook_preprocess_HOOK() for node.html.twig.
 */
// function unesco_oer_dc_preprocess_node(&$variables) {
//     $classes = &get_classes($variables);

//     $node_name = get_node_name($variables['elements']['#attributes']['data-history-node-id']);
//     if (!empty($node_name)) {
//         $classes[] = 'c-node--' . $node_name;
//         $variables['theme_hook_suggestions'][] = 'node__' . $node_name;
//     }
// }

/**
 * Implements hook_theme_suggestions_HOOK_alter() for node.
 */
function unesco_oer_dc_theme_suggestions_node_alter(&$suggestions, &$variables) {
    $node_name = get_node_name($variables['elements']['#attributes']['data-history-node-id']);
    if (!empty($node_name)) {
        $suggestions[] = 'node__' . clean_suggetion($node_name);
    }
}

/**
 * Implements hook_preprocess_HOOK() for block.html.twig.
 */
function unesco_oer_dc_preprocess_block(&$variables) {
    $classes = &get_classes($variables);

    // Navigation block
    if ($variables['base_plugin_id'] === 'system_menu_block') {
        $plugin_id = $variables['derivative_plugin_id'];
        $classes[] = 'c-navigation';
        $classes[] = 'c-navigation--' . str_replace('-navigation', '', $plugin_id);

        if (in_array($plugin_id, array('follow-us', 'information', 'categories'))) {
            $classes[] = 'c-navigation--footer';
        }
    }

    // Branding block
    if ($variables['base_plugin_id'] === 'system_branding_block') {
        $classes[] = 'c-site-branding';
    }

    // Language block
    if ($variables['base_plugin_id'] === 'language_block') {
        $classes = array('contextual-region', 'c-dropdown', 'c-dropdown--language');
        $variables['attributes']['data-options'] = json_encode(array('popper' => array('placement' => 'bottom')));
    }

    // Search block
    if ($variables['base_plugin_id'] === 'search_form_block') {
        $classes = array('c-search-form-block');
        $variables['content']['actions']['submit']['#icon'] = 'search';
        // $variables['content']['actions']['submit']['#leading_icon'] = 'search';
        // $variables['content']['actions']['submit']['#trailing_icon'] = 'search';
        $variables['content']['keys']['#control_size'] = 'small';
    }

    // Custom block
    $block_name = get_block_name($variables['derivative_plugin_id']);
    if (!empty($block_name)) {
        $variables['block_name'] = $block_name;
    }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for block.
 */
function unesco_oer_dc_theme_suggestions_block_alter(&$suggestions, &$variables) {
    $uuid = $variables['elements']['#derivative_plugin_id'];
    if (!empty($uuid)) {
        $block = Drupal::service('entity.repository')->loadEntityByUuid('block_content', $variables['elements']['#derivative_plugin_id']);
        if ($block) {
            $block_type = $block->bundle();
            $suggestions[] = 'block__' . clean_suggetion($block_type);
        }
    }

    $block_name = get_block_name($variables['elements']['#derivative_plugin_id']);
    if (!empty($block_name)) {
        $suggestions[] = 'block__' . clean_suggetion($block_name);
        $content = &$variables['elements']['content'];
        foreach ($content as $key => &$item) {
            if (str_starts_with($key, '#')) {
                continue;
            }

            if (is_array($item)) {
                $item['#block_name'] = $block_name;
            }
        }
    }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for paragraph.
 */
function unesco_oer_dc_theme_suggestions_paragraph_alter(&$suggestions, &$variables) {
    $elements = &$variables['elements'];
    $paragraph = &$elements['#paragraph'];
    $block_name = $elements['#block_name'] ?? null;
    if (!empty($block_name)) {
        $type = reset($paragraph->toArray()['type'])['target_id'];
        $suggestions[] = implode('__', [
            'paragraph',
            $type,
            clean_suggetion($block_name)
        ]);

        foreach ($elements as $key => &$element) {
            if (str_starts_with($key, '#') || !is_array($element)) {
                continue;
            }

            $element['#block_name'] = $block_name;
            $field_type = $element['#field_type'] ?? null;
            if ($field_type === 'image') {
                $i = 0;
                while (!empty($element[$i])) {
                    $element[$i]['#item_attributes']['data-block'] = $block_name;
                    $i++;
                }
            }
        }
    }
}

/**
 * Implements hook_preprocess_HOOK() for paragraph.html.twig.
 */
function unesco_oer_dc_preprocess_paragraph(&$variables) {
    $elements = &$variables['elements'];
    foreach ($elements as $key => &$element) {
        if (str_starts_with($key, '#') || !is_array($element)) {
            continue;
        }

        $field_type = $element['#field_type'] ?? null;
        if ($field_type === 'image') {
            $image_item = $element[0]['#item'];
            $variables['image_url'] = $image_item->entity->getFileUri();
        } else if ($field_type === 'link') {
            $url = $element[0]['#url'];
            $variables['link_url'] = $url->toString();
            $variables['link_external'] = $url->isExternal();
        }
    }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for field.
 */
function unesco_oer_dc_theme_suggestions_field_alter(&$suggestions, &$variables) {
    $element = &$variables['element'];
    $block_name = $element['#block_name'] ?? null;
    if (!empty($block_name)) {
        $suggestions[] = implode('__', [
            'field',
            $element['#entity_type'],
            $element['#field_name'],
            $element['#bundle'],
            clean_suggetion($block_name)
        ]);

        $i = 0;
        while (!empty($element[$i])) {
            $element[$i]['#block_name'] = $block_name;
            $i++;
        }
    }
}

/**
 * Implements hook_preprocess_HOOK() for field.html.twig.
 */
// function unesco_oer_dc_theme_preprocess_field(&$variables) {}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for image formatter.
 */
function unesco_oer_dc_theme_suggestions_image_formatter_alter(&$suggestions, &$variables) {
    $block_name = &$variables['item_attributes']['data-block'] ?? null;
    if (!empty($block_name)) {
        $suggestions[] = implode('__', [
            'image_formatter',
            clean_suggetion($block_name)
        ]);
    }
}
/**
 * Implements hook_theme_suggestions_HOOK_alter() for image.
 */
function unesco_oer_dc_theme_suggestions_image_alter(&$suggestions, &$variables) {
    $block_name = &$variables['attributes']['data-block'] ?? null;
    if (!empty($block_name)) {
        $suggestions[] = implode('__', [
            'image',
            clean_suggetion($block_name)
        ]);
    }
}

/**
 * Implements hook_preprocess_HOOK() for region.html.twig.
 */
function unesco_oer_dc_preprocess_region(&$variables) {
    $classes = &get_classes($variables);
    $classes[] = 'o-region';
}

/**
 * Implements hook_preprocess_HOOK() for layout--onecol.html.twig.
 */
function unesco_oer_dc_preprocess_layout__onecol(&$variables) {
    $classes = &get_classes($variables);

    // Custom sections
    foreach ($variables['content']['content'] as $key => $content) {
        if (is_array($content) && array_key_exists('#derivative_plugin_id', $content)) {
            $block_name = get_block_name($content['#derivative_plugin_id']);
            if (!empty($block_name)) {
                $classes[] = 'c-section--' . $block_name;
                $variables['block_names'][] = $block_name;
            }
        }
    }
}

/**
 * Implements hook_preprocess_HOOK() for links.html.twig.
 */
function unesco_oer_dc_preprocess_links__language_block(&$variables) {
    foreach ($variables['links'] as &$link) {
        $link['link']['#options']['attributes']['class'] = array('c-menu__link');
    }

    $language =  \Drupal::languageManager()->getCurrentLanguage()->getName();
    $variables['language'] = $language;
}

/**
 * Implements hook_preprocess_HOOK() for breadcrumb.html.twig.
 */
function unesco_oer_dc_preprocess_breadcrumb(&$variables) {
    $breadcrumb = &$variables['breadcrumb'];

    if (empty($breadcrumb)) {
        return;
    }

    if (count($breadcrumb) === 1) {
        $breadcrumb = array();
        return;
    }

    if (count($breadcrumb) >= 2 && $breadcrumb[1]['url'] === '/search') {
        $breadcrumb = array(
            $breadcrumb[0],
            array(
                'text' => $breadcrumb[1]['text'],
                'url' => '',
            ),
        );
        return;
    }
}

/**
 * Implements hook_preprocess_HOOK() for menu.html.twig.
 */
// function unesco_oer_dc_preprocess_menu(&$variables) {
//     $classes = &$variables['attributes']['class'];

//     $classes[] = 'c-navigation__menu';
//     $classes[] = 'c-navigation__menu--' . $variables['menu_name'];
// }
