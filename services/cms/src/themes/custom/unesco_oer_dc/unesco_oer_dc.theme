<?php

/**
 * @file
 * Functions to support theming in the UNESCO OER DC theme.
 */

use Drupal\Core\Template\Attribute;
use Drupal\file\Entity\File;
use Drupal\media\Entity\Media;

function get_node_name($key) {
    $node_map = [
        '223' => 'home'
    ];
    if (array_key_exists($key, $node_map)) {
        return $node_map[$key];
    }

    return null;
}

function get_block_name($key) {
    $block_map = [
        'latest_news-latest_news_view' => 'latest-news-view',
        'upcoming_events-upcoming_events_view' => 'upcoming-events-view',
        'cef61108-2e3e-4661-bc31-8b08861eaaca' => 'about',
        '96334729-bbe9-4da2-ad63-adc94c0fd743' => 'who-we-are',
        'e03388f9-471e-4f18-be66-939039bab16f' => 'what-we-do',
        'b6ee0fe2-3b9a-42d8-8ab2-661aa778aa0b' => 'dc-areas-of-action',
        '351dd98b-3fde-4ef7-9d3a-a5d5b6b7f875' => 'latest-news',
        '0fa60256-5732-40bc-b932-64541cc70be2' => 'upcoming-events',
    ];
    if (array_key_exists($key, $block_map)) {
        return $block_map[$key];
    }

    return null;
}

function &get_classes(&$variables) {
    if (empty($variables['attributes']['class'])) {
        $variables['attributes']['class'] = [];
    }

    return $variables['attributes']['class'];
}

function clean_suggetion($suggestion) {
    return str_replace('-', '_', $suggestion);
}

function get_media_image($id, $image_style = '') {
    $media = Media::load($id);
    $file = File::load($media->get('field_media_image')->target_id);
    $media_info = [
        'caption' => $media->field_media_caption->value,
        'alt' => $media->field_media_image->alt,
        'title' => $media->field_media_image->title,
        'width' => intval($media->field_media_image->width),
        'height' => intval($media->field_media_image->height),
        'url' => $file->createFileUrl(),
    ];

    if ($image_style !== '') {
        $style = \Drupal::entityTypeManager()->getStorage('image_style')->load($image_style);
        $original_image = $file->getFileUri();
        $styled_image = $style->buildUri($original_image);
        if (!file_exists($styled_image)) {
            $style->createDerivative($original_image, $styled_image);
        }

        $image_factory = \Drupal::service('image.factory')->get($styled_image);
        $media_info['thumb'] = [
            'url' => \Drupal::service('file_url_generator')->generateString($styled_image),
            'width' => $image_factory->getToolkit()->getWidth(),
            'height' => $image_factory->getToolkit()->getHeight(),
        ];
    }

    return $media_info;
}

function get_join_link() {
    $language_id = \Drupal::languageManager()->getCurrentLanguage()->getId();
    $link = 'https://surveys.unesco.org/163625?lang=' . $language_id;
    return $link;
}

/**
 * Get YouTube embed code.
 * @param string $url
 * @param int $width
 * @param int $height
 */
function get_youtube_embed($url, $width = 560, $height = 315) {
    $url = str_replace('watch?v=', 'embed/', $url);
    $url = str_replace('live/', 'embed/', $url);
    $embed = '<iframe';
    $embed .= ' width="' . $width . '"';
    $embed .= ' height="' . $height . '"';
    $embed .= ' src="' . $url . '"';
    $embed .= ' frameborder="0"';
    $embed .= ' allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"';
    $embed .= ' allowfullscreen';
    $embed .= '></iframe>';
    return $embed;
}


/**
 * Get display name for user.
 * @param Drupal\user\Entity\User $user
 */
function get_user_display_name($user) {
    $first_name = $user->get('field_first_name')->value;
    $last_name = $user->get('field_last_name')->value;
    $words = [];
    if (!empty($first_name)) {
        $words[] = $first_name;
    }

    if (!empty($last_name)) {
        $words[] = $last_name;
    }

    if (empty($words)) {
        $words[] = $user->getDisplayName();
    }

    return implode(' ', $words);
}

/**
 * Get initials for user.
 * @param Drupal\user\Entity\User $user
 */
function get_user_initials($user) {
    $display_name = get_user_display_name($user);
    $words = explode(' ', preg_replace('/\s+|\./', ' ', $display_name));
    $initials = '';
    foreach ($words as $word) {
        $initials .= strtoupper($word[0]);
    }

    if (strlen($initials) > 2) {
        $initials = $initials[0] . $initials[strlen($initials) - 1];
    }

    return $initials;
}

/**
 * Generate background color for given ID.
 * @param string $id
 */
function generate_background_color($id) {
    if (empty($id)) {
        throw new InvalidArgumentException("ID cannot be empty");
    }

    $colors = [
        'navy-blue' => '#001b59',
        'aqua' => '#00aaa0',
        'red' => '#f50019',
        'orange' => '#e66e23',
        'blue' => '#0069b4',
        'fuchsia' => '#b7265e',
        'green' => '#5aaa46',
        'abbey' => '#58595b',
        'chathams-blue' => '#174e86'
    ];

    $color_keys = array_keys($colors);
    $color_values = array_values($colors);

    $hash = md5($id);
    $hash = hexdec(substr($hash, 0, 8));

    $color_index = $hash % count($color_keys);
    $color = $color_values[$color_index];

    return $color;
}

/**
 * Generate avatar for user.
 * @param Drupal\user\Entity\User $user
 */
function generate_avatar($user, $size = 100) {
    $initials = get_user_initials($user);
    $color = generate_background_color($user->getDisplayName());
    $svg = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 ' . $size . ' ' . $size . '" width="' . $size . '" height="' . $size . '">';
    $svg .= '<rect x="0" y="0" width="' . $size . '" height="' . $size . '" fill="' . $color . '"/>';
    $svg .= '<text x="' . ($size / 2) .  '" y="' . ($size / 2) . '" text-anchor="middle" dy="0.35em" fill="#fff" font-size="' . ($size / 2) . '" font-family="\'Montserrat\', sans-serif">' . $initials . '</text>';
    $svg .= '</svg>';
    $avatar = 'data:image/svg+xml;base64,' . base64_encode($svg);
    return $avatar;
}

include_once __DIR__ . '/includes/hooks/html.php';
include_once __DIR__ . '/includes/hooks/page.php';
include_once __DIR__ . '/includes/hooks/node.php';
include_once __DIR__ . '/includes/hooks/layout.php';
include_once __DIR__ . '/includes/hooks/region.php';
include_once __DIR__ . '/includes/hooks/views_view.php';
include_once __DIR__ . '/includes/hooks/container.php';
include_once __DIR__ . '/includes/hooks/block.php';
include_once __DIR__ . '/includes/hooks/paragraph.php';
include_once __DIR__ . '/includes/hooks/menu.php';
include_once __DIR__ . '/includes/hooks/form.php';
include_once __DIR__ . '/includes/hooks/field.php';
include_once __DIR__ . '/includes/hooks/input.php';
include_once __DIR__ . '/includes/hooks/image.php';
include_once __DIR__ . '/includes/hooks/formatter.php';
include_once __DIR__ . '/includes/hooks/links.php';
include_once __DIR__ . '/includes/hooks/breadcrumb.php';
include_once __DIR__ . '/includes/hooks/user.php';
