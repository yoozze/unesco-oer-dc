// # Z-Index Tools
// ===============


// ## Variables
// ------------

/// Define a list of named z-index layers, from lowest to highest index.
/// Nest lists (one level deep) for different z-index contexts.
///
/// @group z-index
/// @access public
/// @type list
///
/// @example scss - Sample z-index list
///     $z-index: (
///         'main',
///         'sidebar',
///         'banner' 'active-nav' 'dropdown',
///         'message',
///         'modal',
///     );
$z-index: () !default;


// ## Functions
// ------------

/// Return the numeric index of a named layer in your `$z-index` list.
///
/// @group z-index
/// @access public
/// @requires {variable} $z-index
/// @param {string} $layer - The name of a z-index layer in your configuration.
/// @returns {number} - The z-index value associated with the given layer in your configuration.
@function z-index($layer) {
    $index: index($z-index, $layer);
    $nested: null;

    @if $index {
        @return $index;
    } @else {
        @for $i from 1 through length($z-index) {
            $stack: nth($z-index, $i);
            $index: $i;
            $nested: index($stack, $layer);

            @if type-of($nested) == 'number' {
                @if $nested == 1 {
                    @return $index;
                } @else if $nested > 1 {
                    @return $nested;
                }
            }
        }
    }

    @if type-of($layer) != 'number' {
        @error '#{$layer} is not a valid z-index.';
    }

    @return $layer;
}


// ## Mixins
// ---------

/// Output the `z-index` property and value of a given layer in your `$z-index` configuration.
///
/// @group z-index
/// @access public
/// @requires {function} z-index
/// @requires {variable} $z-index
/// @param {string} $layer - The name of a z-index layer in your configuration.
/// @outputs The z-index property with a value based on your configuration.
@mixin z-index($layer) {
    z-index: z-index($layer);
}
