// # Icon Button
// =============

$size: size(5);
$icon-size: size(3);
$border-radius: 50%;

.c-icon-button {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    width: $size;
    height: $size;
    padding: 0;
    text-decoration: none;
    border: 0;
    border-radius: $border-radius;
    background-color: transparent;
    cursor: pointer;

    @include before('') {
        @include transition('background-color');

        content: '';
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        z-index: 0;
        border-radius: $border-radius;
    }

    &.is-disabled,
    &:disabled {
        pointer-events: none;
        cursor: default;
    }
}

// ## Icon Button Icon
// -------------------

.c-icon-button__icon {
    width: $icon-size;
    height: $icon-size;
}

// ## Button - Small
// -----------------

$small-size: size(4);
$small-icon-size: size(2.5);

.c-icon-button--small {
    width: $small-size;
    height: $small-size;

    .c-icon-button__icon {
        width: $small-icon-size;
        height: $small-icon-size;
    }
}

// ## Icon Button - Standard
// -------------------------

$standard-color: color('icon');
$standard-color-disabled: color('disabled');
$standard-bg-color-layer: color('abbey');

.c-icon-button--standard {
    color: $standard-color;

    &:not(:disabled):not(.is-disabled):hover {
        @include before(null) {
            background-color: rgba($standard-bg-color-layer, size('opacity' 1));
        }
    }

    &:not(:disabled):not(.is-disabled):focus {
        @include before(null) {
            background-color: rgba($standard-bg-color-layer, size('opacity' 2));
        }
    }

    &:not(:disabled):not(.is-disabled).is-active,
    &:not(:disabled):not(.is-disabled):active {
        @include before(null) {
            background-color: rgba($standard-bg-color-layer, size('opacity' 3));
        }
    }

    &.is-disabled,
    &:disabled {
        color: $standard-color-disabled;

        & > * {
            opacity: size('opacity' 4);
        }
    }
}

// ## Icon Button - Filled
// -----------------------

$filled-color: color('light');
$filled-color-disabled: color('disabled');
$filled-bg-color: color('blue');
$filled-bg-color-layer: color('blue-10');

.c-icon-button--filled {
    color: $filled-color;
    background-color: $filled-bg-color;

    &:not(:disabled):not(.is-disabled):hover {
        @include before(null) {
            background-color: rgba($filled-bg-color-layer, size('opacity' 1));
        }
    }

    &:not(:disabled):not(.is-disabled):focus {
        @include before(null) {
            background-color: rgba($filled-bg-color-layer, size('opacity' 2));
        }
    }

    &:not(:disabled):not(.is-disabled).is-active,
    &:not(:disabled):not(.is-disabled):active {
        @include before(null) {
            background-color: rgba($filled-bg-color-layer, size('opacity' 3));
        }
    }

    &.is-disabled,
    &:disabled {
        color: $filled-color-disabled;
        background-color: color('light');

        @include before(null) {
            background-color: rgba($filled-color-disabled, size('opacity' 1));
        }

        & > * {
            opacity: size('opacity' 4);
        }
    }
}

// ## Icon Button - Tonal
// ----------------------

$tonal-color: color('blue-10');
$tonal-color-disabled: color('disabled');
$tonal-bg-color: color('blue-90');
$tonal-bg-color-layer: color('blue-10');

.c-icon-button--tonal {
    color: $tonal-color;
    background-color: $tonal-bg-color;

    &:not(:disabled):not(.is-disabled):hover {
        @include before(null) {
            background-color: rgba($tonal-bg-color-layer, size('opacity' 1));
        }
    }

    &:not(:disabled):not(.is-disabled):focus {
        @include before(null) {
            background-color: rgba($tonal-bg-color-layer, size('opacity' 2));
        }
    }

    &:not(:disabled):not(.is-disabled).is-active,
    &:not(:disabled):not(.is-disabled):active {
        @include before(null) {
            background-color: rgba($tonal-bg-color-layer, size('opacity' 3));
        }
    }

    &.is-disabled,
    &:disabled {
        color: $tonal-color-disabled;
        background-color: color('light');

        @include before(null) {
            background-color: rgba($tonal-color-disabled, size('opacity' 1));
        }

        & > * {
            opacity: size('opacity' 4);
        }
    }
}

// ## Icon Button - Outlined
// -------------------------

$outlined-color: color('icon');
$outlined-color-disabled: color('disabled');
$outlined-border-color: color('border');
$outlined-bg-color-layer: color('abbey');

.c-icon-button--outlined {
    color: $outlined-color;
    border: 1px solid $outlined-border-color;

    &:not(:disabled):not(.is-disabled):hover {
        @include before(null) {
            background-color: rgba($outlined-bg-color-layer, size('opacity' 1));
        }
    }

    &:not(:disabled):not(.is-disabled):focus {
        @include before(null) {
            background-color: rgba($outlined-bg-color-layer, size('opacity' 2));
        }
    }

    &:not(:disabled):not(.is-disabled).is-active,
    &:not(:disabled):not(.is-disabled):active {
        @include before(null) {
            background-color: rgba($outlined-bg-color-layer, size('opacity' 3));
        }
    }

    &.is-disabled,
    &:disabled {
        color: $outlined-color-disabled;
        border-color: rgba($outlined-color-disabled, size('opacity' 1));

        & > * {
            opacity: size('opacity' 4);
        }
    }
}
